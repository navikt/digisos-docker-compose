services:
  sosialhjelp-mock-alt:
    container_name: sosialhjelp-mock-alt
    platform: linux/amd64
    image: europe-north1-docker.pkg.dev/nais-management-233d/teamdigisos/sosialhjelp-mock-alt:latest
    network_mode: host

  sosialhjelp-mock-alt-api:
    container_name: sosialhjelp-mock-alt-api
    image: ghcr.io/navikt/sosialhjelp-mock-alt-api/sosialhjelp-mock-alt-api:latest
    network_mode: host
    healthcheck:
      test: [ "CMD", "curl", "--silent", "--fail", "http://localhost:8989/sosialhjelp/mock-alt-api/internal/isAlive" ]
      interval: 2s
      timeout: 2s
      retries: 10
    environment:
      - INNSYN_API_VIA_DOCKER_COMPOSE=${INNSYN_API_DOCKER_COMPOSE:-true}
      - SOKNAD_API_VIA_DOCKER_COMPOSE=${SOKNAD_API_DOCKER_COMPOSE:-true}

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  mock-oauth2-server:
    image: ghcr.io/navikt/mock-oauth2-server:2.1.8
    ports:
      - "8888:8080"
    environment:
      JSON_CONFIG: "{\"interactiveLogin\":true, \"loginPagePath\": \"/tmp/login.html\"}"
    configs:
      - source: login_html
        target: /tmp/login.html

  wonderwall:
    image: ghcr.io/nais/wonderwall:latest
    ports:
      - "3000:3000"
    command: >
      --openid.client-id=bogus
      --openid.client-secret=not-so-secret
      --openid.well-known-url=http://localhost:8888/default/.well-known/openid-configuration
      --ingress=http://localhost:3000
      --bind-address=0.0.0.0:3000
      --upstream-host=nginx:4000
      --redis.uri=redis://redis:6379
      --log-level=debug
      --log-format=text
    restart: on-failure
    extra_hosts:
      # Wonderwall needs to both reach and redirect user agents to the mock-oauth2-server:
      # - 'mock-oauth2-server:8888' resolves from the container, but is not resolvable for user agents at the host (e.g. during redirects).
      # - 'localhost:8888' allows user agents to resolve redirects to the mock-oauth2-server, but breaks connectivity from the container itself.
      # This additional mapping allows the container to reach the mock-oauth2-server at 'localhost' through the host network, as well as allowing user agents to correctly resolve redirects.
      - localhost:host-gateway

  echo:
    image: mendhak/http-https-echo:30
    ports:
      - "3100:3100"
    environment:
      HTTP_PORT: 3100
      JWT_HEADER: Authorization
      LOG_IGNORE_PATH: /

  nginx:
    image: nginx:latest
    ports:
      - "4000:4000"
    restart: unless-stopped
    configs:
      - source: nginx_conf
        target: /etc/nginx/nginx.conf

configs:
  nginx_conf:
    content: |
      events {
        worker_connections 1024;
      }

      http {
        server {
          listen 4000;

          location / {
            proxy_pass http://echo:3100;
            proxy_set_header Host $$host;
            proxy_set_header X-Real-IP $$remote_addr;
            proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $$scheme;
          }

          location /sosialhjelp/soknad {
            proxy_pass http://host.docker.internal:3001;
            proxy_set_header Host $$host;
            proxy_set_header X-Real-IP $$remote_addr;
            proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $$scheme;
          }

          location /sosialhjelp/mock-alt {
            proxy_pass http://host.docker.internal:3008;
            proxy_set_header Host $$host;
            proxy_set_header X-Real-IP $$remote_addr;
            proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $$scheme;
          }

          location /sosialhjelp/innsyn {
            proxy_pass http://localhost:3002;
            proxy_set_header Host $$host;
            proxy_set_header X-Real-IP $$remote_addr;
            proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $$scheme;
          }
        }
      }
  login_html:
    file: ./login.html
